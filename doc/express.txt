*express.vim*  An operator to change by an expression

Author: Tom McDonald <http://tommcdo.com>
License: Same terms as Vim itself (see |license|)

This plugin is only available if 'compatible' is not set.

INTRODUCTION                                    *express*

express.vim defines an operator, `g=`, that allows you to change text
according to a VimL |expression|. Once invoked, an expression will be
prompted. In the expression, `v:val` will represent the text being operated
on (similar to |map()|).

COMMANDS                                        *express-commands*

                                                *express-:MapExpress*
:MapExpress {op} {expr}
                        Create an operator which applies the VimL expression
                        {expr} over the given text, and define |Normal| mode
                        and |Visual| mode mappings using {op} as the left hand
                        side of the mapping.
                        See |eval.txt| for help on VimL expressions.

                                                *express-:MapSubpress*
:MapSubpress {op} /{pattern}/{string}/[flags]
                        Create an operator which substitutes replaces
                        {pattern} with {string} over the given text, and
                        define |Normal| mode and |Visual| mode mappings using
                        {op} as the left hand side of the mapping.
                        See |:substitute| for help on substitutions.

                                                *express-<buffer>*
When you want a mapping to apply only to the current buffer, prepend <buffer>
to the left hand side of the mapping.

    :MapExpress <buffer>cd '/* ' . v:val . ' */'

MAPPINGS                                        *express-mappings*

                                                *g=*
g={motion}              Replace the text defined by {motion} with the value of
                        an expression. The expression is entered at the
                        command-line (with an '=' prompt). The original text
                        will populate the value of `v:val` within the
                        expression. If expression is just a function name
                        (with no parentheses), that function will be called
                        using `v:val` as its argument. If the expression
                        begins with '!', it will be treated as an external
                        command, and passed to the |system()| function. To
                        use an expression beginning with logical not
                        (|expr-!|), include a space before the '!' character.

                                                *g==*
g==                     Like |g=|, but for the current line. |linewise|

                                                *g:*
g:{motion}              Like |g=|, but input `pattern/replace/flags` similar to
                        |:substitute|. Individual lines are filtered through
                        the |substitute()| function, as if invoked by |g=|
                        using 'substitute(v:val, ...)'.
                        NOTE: Despite looking like a |:substitute| command,
                        this is really a call to |substitute()|, so some
                        behaviour may differ.

                                                *g::*
g::                     Like |g:|, but for the current line. |linewise|

EXAMPLES                                        *express-examples*

Consider the following text:

    Hi, my name is "john jones"

With your cursor inside the quoted string, type `g=i"` and then input the
following expression on the prompt:

    substitute(v:val, '\<.', '\U\0', 'g')

The resulting text will be:

    Hi, my name is "John Jones"

SETTINGS                                        *express-settings*

To change the default mappings, simply provide your own mappings to the
commands below. The default mappings are as follows:

    nmap g= <Plug>(Express)
    xmap g= <Plug>(Express)
    nmap g== <Plug>(ExpressLine)

For example, to change the Normal-mode mapping to `c=`, use the following:

    nmap c= <Plug>(Express)

This will use the mapping `c=`, and the default `g=` will not be mapped.

                                                *g:express_no_mappings*
g:express_no_mappings ~

If this variable is defined, the default mappings will not be created.

ISSUES AND TODO                                 *express-issues* *express-todo*

See https://github.com/tommcdo/vim-express/issues for bugs and issues.

 vim:tw=78:ts=8:ft=help:norl:
